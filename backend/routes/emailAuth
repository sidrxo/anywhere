const express = require('express');
const uuid = require('uuid');
const bcrypt = require('bcryptjs');
const User = require('../models/User');

const router = express.Router();

// Route to check if an email is registered
router.post('/check-email', async (req, res) => {
  const { email } = req.body;
  console.log('Checking if email exists:', email);

  try {
    const user = await User.findOne({ email });
    if (user) {
      console.log('Email found:', email);
      res.json({ exists: true });
    } else {
      console.log('Email not found:', email);
      res.json({ exists: false });
    }
  } catch (err) {
    console.error('Error checking email:', err);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

// Route to sign up a new email user
router.post('/signup', async (req, res) => {
  const { firstName, lastName, email, password } = req.body;
  console.log('Signing up new user:', email);

  try {
    const existingUser = await User.findOne({ email });
    if (existingUser) {
      console.log('User already exists:', email);
      return res.status(400).json({ error: 'User already exists' });
    }

    const hashedPassword = await bcrypt.hash(password, 12);

    const newUser = new User({
      email,
      name: `${firstName} ${lastName}`,
      uuid: uuid.v4(),
      password: hashedPassword,
    });

    await newUser.save();
    console.log('User created successfully:', email);
    res.status(201).json({ message: 'User created successfully' });
  } catch (err) {
    console.error('Error signing up user:', err);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

// Route to log in an email user
router.post('/login', async (req, res) => {
  const { email, password } = req.body;
  console.log('Logging in user:', email);

  try {
    const user = await User.findOne({ email });
    if (!user) {
      console.log('User not found:', email);
      return res.status(401).json({ error: 'User not found' });
    }

    const isMatch = await bcrypt.compare(password, user.password);
    if (!isMatch) {
      console.log('Invalid credentials for user:', email);
      return res.status(401).json({ error: 'Invalid credentials' });
    }

    res.cookie('user_uuid', user.uuid, { httpOnly: true });
    console.log('Login successful for user:', email);
    res.json({ message: 'Login successful' });
  } catch (err) {
    console.error('Error logging in user:', err);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

module.exports = router;
